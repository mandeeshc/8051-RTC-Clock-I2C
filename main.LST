C51 COMPILER V9.59.0.0   MAIN                                                              09/20/2021 17:06:35 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

*** WARNING C500 IN LINE 1 OF main.c: SERIAL NUMBER EXPIRED
   1          #include <REGX51.H>
   2          #include "ds1307.h"
   3          #define LCD P0  
   4          //****************************************
   5          sbit RS = P1^0;      
   6          sbit EN = P1^1;
   7          
   8          sbit sw1 = P1^4;
   9          sbit sw2 = P1^5;
  10          sbit sw3 = P1^6;
  11          
  12          sbit sw4 = P3^0;
  13          sbit sw5 = P3^1;
  14          
  15          //sbit IR = P1^7;
  16          
  17          char arr_t[10];
  18          int credit[4];
  19          int credit2[4];
  20          int global=0;
  21          //****************************************
  22          void init_lcd(void);
  23          void lcd_data(char);
  24          void lcd_cmd(char);
  25          //****************************************
  26          void delay_lcd(int DD)
  27          {
  28   1        int i,j;
  29   1        for(i=1;i<=DD;i++)
  30   1        {
  31   2          for(j=1;j<=50;j++);
  32   2        }
  33   1      }
  34          //****************************************
  35          void init_LCD()
  36          {
  37   1        RS=0;
  38   1        lcd_cmd(0x38);
  39   1        lcd_cmd(0x01);
  40   1        lcd_cmd(0x0F);
  41   1        lcd_cmd(0x0C);
  42   1        lcd_cmd(0x80);
  43   1        lcd_data('O');
  44   1        lcd_data('K');
  45   1        delay_lcd(1000);
  46   1        lcd_cmd(0x01);
  47   1        lcd_cmd(0x80);
  48   1      }
  49          //****************************************
  50          void lcd_data(char dta)
  51          {
  52   1        RS=1;
  53   1        LCD = dta;
  54   1        EN=1;
C51 COMPILER V9.59.0.0   MAIN                                                              09/20/2021 17:06:35 PAGE 2   

  55   1        delay_lcd(6);
  56   1        EN=0;
  57   1      }
  58          
  59          void lcd_string(char *dat)
  60          {
  61   1        while(*dat)
  62   1        {
  63   2          lcd_data(*dat++);
  64   2        }
  65   1      }
  66          //****************************************
  67          void lcd_cmd(char cmmd)
  68          {
  69   1        RS=0;
  70   1        LCD = cmmd;
  71   1        EN=1;
  72   1        delay_lcd(6);
  73   1        EN=0;
  74   1      } 
  75          //****************************************
  76          void clear_arr_t()
  77          {
  78   1        int i;
  79   1        for(i=0;i<10;i++)
  80   1        {
  81   2          arr_t[i]=' ';
  82   2        } 
  83   1      }
  84          //****************************************
  85          void disp_val(char add, int value, int space)
  86          { 
  87   1      //  char arr_t[10];
  88   1        int c1=0,i;
  89   1        int v1=value; 
  90   1        lcd_cmd(add);
  91   1        for(i=0;i<space;i++)
  92   1        {
  93   2          lcd_data(' ');
  94   2        }
  95   1        if(v1!=0)
  96   1        { 
  97   2          clear_arr_t();
  98   2          while(v1!=0)  
  99   2          {     
 100   3            arr_t[c1] = (v1%10)+48;
 101   3            v1 = v1/10;
 102   3            c1++; 
 103   3          }  
 104   2          lcd_cmd(add);
 105   2          for(i=c1-1;i>=0;i--)
 106   2          {
 107   3            lcd_data(arr_t[i]);
 108   3          }
 109   2        }
 110   1        else
 111   1        {
 112   2          lcd_cmd(add);
 113   2          lcd_data('0');    
 114   2        }
 115   1      }
 116          //****************************************
C51 COMPILER V9.59.0.0   MAIN                                                              09/20/2021 17:06:35 PAGE 3   

 117          void display_time(int hour,int min,int sec)
 118          {
 119   1          unsigned char buf;
 120   1          lcd_cmd(0x80);
 121   1          lcd_data('T');lcd_data('I');lcd_data('M');lcd_data('E');lcd_data(' ');lcd_data(':');lcd_data(' ');
 122   1      
 123   1          buf = hour & 0xF0;
 124   1          buf = (buf>>4);
 125   1          buf = buf + 48;
 126   1          lcd_data(buf);
 127   1      
 128   1          buf = hour & 0x0F;
 129   1          buf = buf + 48;  
 130   1          lcd_data(buf);     
 131   1      
 132   1          lcd_data(':');
 133   1          
 134   1          buf = min & 0xF0;
 135   1          buf = (buf>>4);
 136   1          buf = buf + 48;
 137   1          lcd_data(buf);
 138   1      
 139   1          buf = min & 0x0F;
 140   1          buf = buf + 48;  
 141   1          lcd_data(buf);     
 142   1      
 143   1          lcd_data(':');
 144   1      
 145   1          buf = sec & 0xF0;
 146   1          buf = (buf>>4);
 147   1          buf = buf + 48;  
 148   1          lcd_data(buf);
 149   1      
 150   1          buf = sec & 0x0F;
 151   1          buf = buf + 48;  
 152   1          lcd_data(buf);
 153   1      
 154   1      }
 155          //****************************************
 156          char inttochar(int val)
 157          {
 158   1        char ret;
 159   1        int tmp,tmp1,tmp2;
 160   1      
 161   1        tmp = val;
 162   1        tmp1 = (tmp%10);
 163   1        tmp=tmp/10;
 164   1        tmp2 = (tmp%10);
 165   1        tmp2 = tmp2<<4;
 166   1        ret = tmp1|tmp2;
 167   1        return ret;
 168   1      }
 169          //****************************************
 170          int main()
 171          {   
 172   1        int i,flg1;
 173   1        unsigned char sec, min, hour;
 174   1        unsigned char min2,hour2,min3,hour3;
 175   1        sw4 = 0;
 176   1        sw5 = 1;
 177   1      
 178   1        //global=inttochar(56);
C51 COMPILER V9.59.0.0   MAIN                                                              09/20/2021 17:06:35 PAGE 4   

 179   1      //  hour2 = 0x09;
 180   1      //  min2 = 0x08;
 181   1        hour3 = 0x09;
 182   1        min3 = 0x10;
 183   1      
 184   1      
 185   1        init_lcd();
 186   1      //  DS1307_settime(0x22,0x31,0x06);   /* Set Time (hh:mm:ss) */
 187   1                 
 188   1        lcd_cmd(0x01);    
 189   1        lcd_cmd(0x80);
 190   1        lcd_data('E');lcd_data('N');lcd_data('T');lcd_data('E');lcd_data('R');lcd_data(' ');lcd_data('S');lcd_dat
             -a('T');lcd_data('A');lcd_data('R');lcd_data('T');lcd_data(' ');lcd_data('T');lcd_data('I');lcd_data('M');lcd_data('E');
 191   1        delay_lcd(2000);
 192   1        for(i=0;i<2;i++)
 193   1        {
 194   2          lcd_cmd(0x01);
 195   2          lcd_cmd(0x80);
 196   2          if(i==0)
 197   2          {
 198   3            lcd_data('H');lcd_data('O');lcd_data('U');lcd_data('R');
 199   3          }           
 200   2          else if(i==1)
 201   2          {
 202   3            lcd_data('M');lcd_data('I');lcd_data('N');lcd_data(' ');  
 203   3          }           
 204   2          
 205   2          credit[i+1]=0;
 206   2          flg1=0;
 207   2          disp_val(0xC0,credit[i+1],4);
 208   2          while(flg1==0)
 209   2          {
 210   3            if(i==0)
 211   3            {
 212   4              if(sw1==0 && credit[i+1]<23)
 213   4              {
 214   5                credit[i+1]+=1;
 215   5                disp_val(0xC0,credit[i+1],4);       
 216   5                delay_lcd(200);
 217   5              }
 218   4            }
 219   3            else
 220   3            {
 221   4              if(sw1==0 && credit[i+1]<59)
 222   4              {
 223   5                credit[i+1]+=1;
 224   5                disp_val(0xC0,credit[i+1],4);       
 225   5                delay_lcd(200);
 226   5              }
 227   4            
 228   4            }
 229   3            if(sw2==0 && credit[i+1]>0)
 230   3            {
 231   4              credit[i+1]-=1;
 232   4              disp_val(0xC0,credit[i+1],4);
 233   4              delay_lcd(200);
 234   4            }
 235   3            if(sw3==0)
 236   3            {
 237   4              flg1=1;
 238   4              delay_lcd(200);
 239   4            }   
C51 COMPILER V9.59.0.0   MAIN                                                              09/20/2021 17:06:35 PAGE 5   

 240   3          }
 241   2        }
 242   1        //
 243   1        lcd_cmd(0x01);    
 244   1        lcd_cmd(0x80);
 245   1        lcd_data('E');lcd_data('N');lcd_data('T');lcd_data('E');lcd_data('R');lcd_data(' ');lcd_data('S');lcd_dat
             -a('T');lcd_data('O');lcd_data('P');lcd_data(' ');lcd_data('T');lcd_data('I');lcd_data('M');lcd_data('E');
 246   1        delay_lcd(2000);
 247   1        for(i=0;i<2;i++)
 248   1        {
 249   2          lcd_cmd(0x01);
 250   2          lcd_cmd(0x80);
 251   2          if(i==0)
 252   2          {
 253   3            lcd_data('H');lcd_data('O');lcd_data('U');lcd_data('R');
 254   3          }           
 255   2          else if(i==1)
 256   2          {
 257   3            lcd_data('M');lcd_data('I');lcd_data('N');lcd_data(' ');  
 258   3          }           
 259   2          
 260   2          credit2[i+1]=0;
 261   2          flg1=0;
 262   2          disp_val(0xC0,credit2[i+1],4);
 263   2          while(flg1==0)
 264   2          {
 265   3            if(i==0)
 266   3            {
 267   4              if(sw1==0 && credit2[i+1]<23)
 268   4              {
 269   5                credit2[i+1]+=1;
 270   5                disp_val(0xC0,credit2[i+1],4);        
 271   5                delay_lcd(200);
 272   5              }
 273   4            }
 274   3            else
 275   3            {
 276   4              if(sw1==0 && credit2[i+1]<59)
 277   4              {
 278   5                credit2[i+1]+=1;
 279   5                disp_val(0xC0,credit2[i+1],4);        
 280   5                delay_lcd(200);
 281   5              }
 282   4            
 283   4            }
 284   3            if(sw2==0 && credit2[i+1]>0)
 285   3            {
 286   4              credit2[i+1]-=1;
 287   4              disp_val(0xC0,credit2[i+1],4);
 288   4              delay_lcd(200);
 289   4            }
 290   3            if(sw3==0)
 291   3            {
 292   4              flg1=1;
 293   4              delay_lcd(200);
 294   4            }   
 295   3          }
 296   2        }
 297   1        //
 298   1        hour2 = inttochar(credit[1]);
 299   1        min2  = inttochar(credit[2]);
 300   1        hour3 = inttochar(credit2[1]);
C51 COMPILER V9.59.0.0   MAIN                                                              09/20/2021 17:06:35 PAGE 6   

 301   1        min3  = inttochar(credit2[2]);
 302   1      
 303   1        lcd_cmd(0x01);
 304   1        while(1)
 305   1        {   
 306   2          sec   = DS1307_get(SEC);  
 307   2          min   = DS1307_get(MIN);  
 308   2          hour  = DS1307_get(HOUR);
 309   2          display_time(hour,min,sec);
 310   2          /*if(global==0)
 311   2          {
 312   2            if((min2==min) &&(hour2==hour))
 313   2            { 
 314   2              lcd_cmd(0xC0);            
 315   2              lcd_data('S');lcd_data('Y');lcd_data('S');lcd_data('T');lcd_data('E');lcd_data('M');lcd_data(' ');lcd_
             -data('O');lcd_data('N');
 316   2              delay_lcd(2000);
 317   2              lcd_cmd(0xC0);            
 318   2              lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_
             -data(' ');lcd_data(' ');
 319   2              global=1;
 320   2            }
 321   2          }
 322   2        
 323   2          if(global==1)
 324   2          {        
 325   2            if(IR==1)
 326   2            {
 327   2              lcd_cmd(0xC0);
 328   2              lcd_data('D');lcd_data('E');lcd_data('T');lcd_data('E');lcd_data('C');lcd_data('T');lcd_data('E');lcd_
             -data('D');lcd_data(' ');
 329   2              sw4=1;
 330   2              delay_lcd(500);
 331   2              sw4=0;
 332   2              delay_lcd(500);
 333   2              sw5=0;
 334   2              delay_lcd(500);
 335   2              sw5=1;
 336   2              lcd_cmd(0xC0);            
 337   2              delay_lcd(500);
 338   2              lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_
             -data(' ');lcd_data(' ');      
 339   2            }
 340   2            
 341   2          }
 342   2          if(global==1)
 343   2          {
 344   2            if((min3==min) &&(hour3==hour))
 345   2            { 
 346   2              lcd_cmd(0xC0);            
 347   2              lcd_data('S');lcd_data('Y');lcd_data('S');lcd_data('T');lcd_data('E');lcd_data('M');lcd_data(' ');lcd_
             -data('O');lcd_data('F');lcd_data('F');
 348   2              delay_lcd(2000);
 349   2              lcd_cmd(0xC0);            
 350   2              lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_data(' ');lcd_
             -data(' ');lcd_data(' ');lcd_data(' ');
 351   2              global=0;
 352   2            }
 353   2          } */
 354   2              
 355   2        }             
 356   1        return 0;
C51 COMPILER V9.59.0.0   MAIN                                                              09/20/2021 17:06:35 PAGE 7   

 357   1      }
*** WARNING C294 IN LINE 356 OF main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1572    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
